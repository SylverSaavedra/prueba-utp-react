[{"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\index.js":"1","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\App.js":"2","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\reportWebVitals.js":"3","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\Header.js":"4","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\FormAction.js":"5","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\CategoryContext.js":"6","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\ProductsContext.js":"7","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\ListProducts.js":"8","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\Product.js":"9","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\DetailsProductContext.js":"10","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\customHooks\\useConvertCurrency.js":"11","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\LoadingContext.js":"12"},{"size":283,"mtime":1607359262855,"results":"13","hashOfConfig":"14"},{"size":1151,"mtime":1607383230652,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":3423,"mtime":1607383573808,"results":"17","hashOfConfig":"14"},{"size":2129,"mtime":1607378939990,"results":"18","hashOfConfig":"14"},{"size":719,"mtime":1607378805338,"results":"19","hashOfConfig":"14"},{"size":1513,"mtime":1607383499845,"results":"20","hashOfConfig":"14"},{"size":677,"mtime":1607379013238,"results":"21","hashOfConfig":"14"},{"size":6433,"mtime":1607381603637,"results":"22","hashOfConfig":"14"},{"size":966,"mtime":1607379884896,"results":"23","hashOfConfig":"14"},{"size":254,"mtime":1607347054765,"results":"24","hashOfConfig":"14"},{"size":856,"mtime":1607382808260,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t6lyce",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\index.js",[],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\App.js",["53"],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\reportWebVitals.js",[],["54","55"],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\Header.js",[],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\FormAction.js",["56"],"import React, { useContext, useState } from 'react';\r\nimport { CategoryContext } from '../context/CategoryContext';\r\nimport { ProductsContext } from '../context/ProductsContext';\r\n\r\nimport { Button, CircularProgress, makeStyles, Select, TextField, Typography } from '@material-ui/core';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: '1fr 1fr 1fr',\r\n\t\twidth: '100%',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tmargin: '0 40px',\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackground: '#a4d331',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#5A7419',\r\n\t\t\tboxShadow: 'none',\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nconst FormAction = () => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [search, setSearch] = useState({\r\n\t\tname: '',\r\n\t\tcategory: '',\r\n\t});\r\n\r\n\tconst { categories } = useContext(CategoryContext);\r\n\tconst { searchProducts, setConsult } = useContext(ProductsContext);\r\n\r\n\tconst getProductInformation = (e) => {\r\n\t\tsetSearch({\r\n\t\t\t...search,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={(e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tsearchProducts(search);\r\n\t\t\t\tsetConsult(true);\r\n\t\t\t}}>\r\n\t\t\t<div>\r\n\t\t\t\t<Typography variant='h5'>Buscar Productos por Categoría o Nombre</Typography>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TextField id='name' name='name' label='Busca por producto' onChange={getProductInformation}></TextField>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tnative\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tname: 'category',\r\n\t\t\t\t\t\t\tid: 'category-native-simple',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={getProductInformation}>\r\n\t\t\t\t\t\t<option value=''>Selecciona Categoría</option>\r\n\t\t\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t\t\t<option key={category.id} value={category.id}>\r\n\t\t\t\t\t\t\t\t{category.name}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button type='submit' className={classes.button} startIcon={<SearchIcon />}>\r\n\t\t\t\t\t\tBuscar Productos\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default FormAction;\r\n","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\CategoryContext.js",[],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\ProductsContext.js",["57"],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\ListProducts.js",[],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\components\\Product.js",["58"],"import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { DetailsProductContext } from '../context/DetailsProductContext';\r\n\r\nimport useConvertCurrency from '../customHooks/useConvertCurrency';\r\n\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tCardActionArea,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardMedia,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogTitle,\r\n\tmakeStyles,\r\n\tModal,\r\n\tTypography,\r\n} from '@material-ui/core';\r\n\r\nfunction getModalStyle() {\r\n\tconst top = 50;\r\n\tconst left = 50;\r\n\r\n\treturn {\r\n\t\ttop: `${top}%`,\r\n\t\tleft: `${left}%`,\r\n\t\ttransform: `translate(-${top}%, -${left}%)`,\r\n\t};\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbutton: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackground: '#a4d331',\r\n\t\theight: 'auto',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#5A7419',\r\n\t\t\tboxShadow: 'none',\r\n\t\t},\r\n\t},\r\n\tcontainerActions: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: '1fr 1fr',\r\n\t\tjustifyItems: 'space-between',\r\n\t},\r\n\tcontainerDetails: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: '70% 30%',\r\n\t\tgridGapColumn: '10px',\r\n\t\tgridTemplateRows: 'auto',\r\n\t},\r\n\tmedia: {\r\n\t\theight: 140,\r\n\t},\r\n\tpaper: {\r\n\t\tposition: 'absolute',\r\n\t\twidth: 450,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\tpadding: theme.spacing(2, 4, 3),\r\n\t},\r\n\troot: {\r\n\t\tmaxWidth: 345,\r\n\t\tminWidth: 300,\r\n\t},\r\n}));\r\n\r\nconst Product = ({ product }) => {\r\n\tconst { purchaseProducts, setIdProduct, setProduct, setPurchaseProducts } = useContext(DetailsProductContext);\r\n\r\n\tconst [modalStyle] = useState(getModalStyle);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [openConfirm, setOpenConfirm] = useState(false);\r\n\tconst [exist, setExist] = useState(false);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleConfirmOpen = () => {\r\n\t\tsetOpenConfirm(true);\r\n\t};\r\n\r\n\tconst handleConfirmClose = () => {\r\n\t\tsetOpenConfirm(false);\r\n\t};\r\n\r\n\tconst addProductBag = () => {\r\n\t\tsetPurchaseProducts((prevState) => [...prevState, { id: product.sku, name: product.name, state: true }]);\r\n\t};\r\n\r\n\tconst checkIfProductExist = (sku) => {\r\n\t\treturn purchaseProducts.filter((prod) => prod.id === sku).length > 0;\r\n\t};\r\n\r\n\tconst deleteProductBag = () => {\r\n\t\tconst purchaseProductsNew = purchaseProducts.filter((purchaseProduct) => {\r\n\t\t\treturn purchaseProduct.id !== product.sku;\r\n\t\t});\r\n\r\n\t\tsetPurchaseProducts(purchaseProductsNew);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tif (checkIfProductExist(product.sku)) {\r\n\t\t\tsetExist(true);\r\n\t\t} else {\r\n\t\t\tsetExist(false);\r\n\t\t}\r\n\t}, [purchaseProducts]);\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t<CardMedia className={classes.media} image={product.image} title={`Imagen de ${product.name}`} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography gutterBottom variant='h5' component='h2'>\r\n\t\t\t\t\t\t{product.name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t{product.longDescription}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography align='right'>{useConvertCurrency(product.regularPrice)}</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<CardActions className={classes.containerActions}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize='small'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetIdProduct(product.sku);\r\n\t\t\t\t\t\thandleOpen();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tVista Previa\r\n\t\t\t\t</Button>\r\n\t\t\t\t{exist ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button type='button' className={classes.button} onClick={handleConfirmOpen}>\r\n\t\t\t\t\t\t\tEliminar\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\topen={openConfirm}\r\n\t\t\t\t\t\t\tonClose={handleConfirmClose}\r\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\r\n\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{'Está seguro de realizar esta acción?'}</DialogTitle>\r\n\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t<Button type='button' onClick={handleConfirmClose} color='primary'>\r\n\t\t\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\thandleConfirmClose();\r\n\t\t\t\t\t\t\t\t\t\tdeleteProductBag(product);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\tautoFocus>\r\n\t\t\t\t\t\t\t\t\tAceptar\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\taddProductBag(product);\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tAgregar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t)}\r\n\t\t\t</CardActions>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={() => {\r\n\t\t\t\t\tsetIdProduct(null);\r\n\t\t\t\t\tsetProduct({});\r\n\t\t\t\t\thandleClose();\r\n\t\t\t\t}}>\r\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\r\n\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t<CardMedia className={classes.media} image={product.image} title={`Imagen de ${product.name}`} />\r\n\t\t\t\t\t\t<CardContent className={classes.containerDetails}>\r\n\t\t\t\t\t\t\t<Typography gutterBottom variant='h5' component='h5'>\r\n\t\t\t\t\t\t\t\t{product.name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography align='right'>{useConvertCurrency(product.regularPrice)}</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t{product.longDescription}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t{exist ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Button type='button' className={classes.button} onClick={handleConfirmOpen}>\r\n\t\t\t\t\t\t\t\t\tEliminar\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\t\t\topen={openConfirm}\r\n\t\t\t\t\t\t\t\t\tonClose={handleConfirmClose}\r\n\t\t\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\t\t\t\t\t\t\taria-describedby='alert-dialog-description'>\r\n\t\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{'Está seguro de realizar esta acción?'}</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t\t<Button type='button' onClick={handleConfirmClose} color='primary'>\r\n\t\t\t\t\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleConfirmClose();\r\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteProductBag(product);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\tautoFocus>\r\n\t\t\t\t\t\t\t\t\t\t\tAceptar\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\taddProductBag(product);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tAgregar\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\DetailsProductContext.js",[],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\customHooks\\useConvertCurrency.js",[],"C:\\Users\\usuario\\Desktop\\prueba-utp-react\\src\\context\\LoadingContext.js",[],{"ruleId":"59","severity":1,"message":"60","line":25,"column":8,"nodeType":"61","messageId":"62","endLine":25,"endColumn":15},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":5,"column":18,"nodeType":"61","messageId":"62","endLine":5,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":37,"column":5,"nodeType":"70","endLine":37,"endColumn":13,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":116,"column":5,"nodeType":"70","endLine":116,"endColumn":23,"suggestions":"73"},"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"'CircularProgress' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'consult'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has missing dependencies: 'checkIfProductExist' and 'product.sku'. Either include them or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [consult, search]",{"range":"82","text":"83"},"Update the dependencies array to be: [checkIfProductExist, product.sku, purchaseProducts]",{"range":"84","text":"85"},[1288,1296],"[consult, search]",[2560,2578],"[checkIfProductExist, product.sku, purchaseProducts]"]